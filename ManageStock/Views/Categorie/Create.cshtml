@model ManageStock.Models.Categorie

@{
    ViewData["Title"] = "Ajouter une catégorie";
}

<h4>Ajouter une catégorie</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Nom" class="control-label"></label>
                <input asp-for="Nom" class="form-control" />
                <span asp-validation-for="Nom" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="4" maxlength="100" id="description"></textarea>
                <small id="description-counter" class="form-text text-muted">
                    0 / 100 caractères
                </small>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <hr style="visibility: hidden;" />
            <div class="form-group d-flex gap-2">
                <input type="submit" value="Enregistrer" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Retour</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            const descriptionInput = $('#description');
            const descriptionCounter = $('#description-counter');
            descriptionInput.on('input', function () {
                const currentLength = $(this).val().length;
                descriptionCounter.text(`${currentLength} / 100 caractères`);
            });
        });
    </script>
}
